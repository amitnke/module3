md
x <- 3
x
x <- c(17, 14, 4, 5, 13, 12, 10)
y <- x[x>=10] <-4
y
z <- x[x>10] <-4
z
a <- x[x>10] == 4
a
b <- x[x.4] <- 10
b <- x[x > 4] <- 10
b
source('~/maleVector.R')
source('~/maleVector.R')
makeVector(1:1000)
makeVector(c(1:1000))
source('~/maleVector.R')
x <- 1:10000
makeVector(x)
vec <- makeVector(x)
vec$getMean()
vec <- makeVector(x)
vec
vec$getmean()
mx <- mean(x)
vec$setmean(mx)
vec$getmean()
vec
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
make check
make check-all
getwd()
x <- 1
print(x)
x
a <- c(1,2,3,4,5)
b <- c(1:5)
a=b
print(a=b)
msg <- "hello"
msg
a <- b
a
b
a-b
a+b
a=b-a
a+b-a
y <- c(T,2)
class(Y)
class(y)
y <- c("a", F)
class(y)
x <- c(1,2,3,4,5)
class(x)
y <- as.logical(x)
y
x <- c(0,1,2,3,4,5)
y <- as.logical(x)
y
class(y)
z <- as.character(x)
z
class(x)
class(z)
x <- c("a","b")
as.numeric(x)
as.logical(x)
subject_name <- c("john_doe", "jane dae", "Steve Graves")
temprature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
temprature[2]
temprature[2:3]
temprature[-2]
temprature[flu_status]
rattle()
data(iris)
str(iris)
iris[2]
str(iris)
iris[2,]
ls()
databases()
plot(iris)
library(A3)
install.packages("Rcmdr")
library("Rcmdr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:Rcmdr", unload=TRUE)
x<-c(3,4,5,8)
y<-c(1,3)
z<-x+y
z
a<-seq(1:100)
a
a <- 1:100
1
a
a <- seq(1,100,2)
a
e<-rep("X",10)
e
a<-rep(1,6)
a
c<-rep(1:6,2)
c
c<-rep(1:6,1:6)
c
x<-rep(c(4,7,1,5),c(3,2,5,2))
x
a<-c(8,7,9,2)
b<-order(a)
b
a<-c(1,2,3)
b<-c(4,5,6)
c<-data.frame(rbind(a,b))
c
d<- data.frame(c(1:3), c(4:6))
d
cube <- function(x,n){}
x^3
cube <- function(x,n){ x^3 }
cube(3)
x <- 1:10
if(x>5){ x <- 0 }
if( x > 5 ) { x <- 0 }
x
if(x > 5) {
x <- 0
}
f <- function(x) {}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
a <- vector("numeric", length = 10)
a
y <- data.frame(a=1, b="a")
y
dput(y)
dput(y, file="y.R")
new.y <- dget("y.R")
new.y
getwd()
con <- url("www.google.com","r")
con <- url("https://www.google.com","r")
con <- url("https://www.facebook.com","r")
con <- url("http://hsdavnarkatiaganj.org","r")
x <- readLines(con)
head(x)
x
f <- function(x, y){ x^2 + y/z}
f(2,3)
ls
environment
search()
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(3)
x
cube(3)
square(4)
search()
ls()
cube
square
help ls
make.NegLogLikk <- function(data, fixed = c(FALSE, FALSE)){
params <- fixed
function(p){
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
## Calculate the Normal density
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a + b)
}
}
set.seed(1)
mormals <- rnorm(100, 1, 2)
nLL <- make.NegLogLikk(mormals)
nLL
ls(environment(nLL))
optim(c(mu = 0, sigma = 1), nLL)$par
seed(1)
get.seed()
help set.seed()
help set.sead
x <- as.Date("1970-01-01")
x
unclass(x)
x
unclass(as.Date("1970-01-02"))
Sys.time()
class(x)
x <- Sys.time()
x
class(x)
p <- as.POSIXct(x)
p
names(unclass(p))
p <- as.POSIXlt(x)
p
names(unclass(p))
p$wday
p$sec
p$hour
p$min
p$mon
p$yday
p$isdst
p
x
class(x)
unclass(x)
datestring <- c("January 10, 2012 10:40", December 9, 2011 9:10)
datestring <- c("January 10, 2012 10:40", "December 9, 2011 9:10")
datastring
datestring
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
class(x)
p <- as.POSIXlt(x)
p
unclass(p)
x <- Sys.time()
x
class(x)
y <- as.Date("2015-05-13 02:23:32")
y
unclass(x)
unclass(x)
p <- as.POSIXlt(x)
names(unclass(p))
p$sec
x <- Sys.Date()
x
datestring()
datestring
search()
Sys.getenvironment()
ls(environment)
ls(environment(GlobalEnv))
ls(environment("GlobalEnv"))
ls(environment(".GlobalEnv"))
names()
names
function(x)
{}
x
install.packages("dplyr")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
setwd("~/R/Module3")
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
wbcd
